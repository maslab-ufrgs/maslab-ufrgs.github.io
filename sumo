==Material Oficial==

* [http://sumo.sourceforge.net Página oficial do SUMO]
* [http://sumo.sourceforge.net/doc/current/docs/userdoc/SUMO_User_Documentation.html Documentação oficial do SUMO]
* [http://sourceforge.net/apps/mediawiki/sumo/index.php?title=Main_Page Wiki do SUMO]
* [http://www.inf.ufrgs.br/maslab/traffic/seeChapter4forSUMO.pdf Trabalho com descrição do SUMO no capítulo 4 (pdf)]

==Dicas/Documentação complementar==

[[Dicas sobre uso do SUMO]]

==Extensões do MASLAB==

* [[Sumoplot]]: armazena estatísticas da simulação e as registra em arquivos .csv
* [[TraCI Hub]] - permite que vários clientes TraCI se conectem a um servidor TraCI
* [[Filtro OSM]] - remove geometria e links da rede de tráfego de acordo com o tipo
* [[OSM C Tools Filter]] - opção mais rápida para filtrar mapas. Não remove geometria
* [[Controle de veículos para o SUMO]]
* [[Controle Semafórico para o SUMO]]
* [[Scripts simples para o SUMO]]
** Netcapacity: calcula o comprimento total e a quantidade de veículos de uma rede de tráfego
** summary2cvs: converte o summary-output do SUMO de .xml para .csv 
** ID2names: troca o ID das edges de uma rede para os nomes atribuídos.
** countlinkusers: conta o numero de veiculos que usou cada edge da simulacao
* [[Road pricing]]: scripts para realização de experimentos de tarifação viária.
* [[Comunicação V2V]]
** [[IVC Project]]: para a execução de experimentos de comunicação inter-veicular (IVC)
** [[Vehicle Typer]]: classifica os veículos para os experimentos de IVC
* [[NetPopulate]]: diversos scripts para geração de carga em redes viárias.
** [[DemandKeeper]]: mantém a rede de tráfego ocupada re-roteando os veículos que terminam suas viagens
** [[LoadKeeper]]: mantém a carga na rede constante inserindo um novo veículo quando outro sai da rede.
** [[ODKeeper]]: igual ao [[LoadKeeper]], mas usa matriz OD para selecionar origens e destinos dos motoristas.
** [[ODLoader]]: insere veículos na rede viária até atingir a carga desejada (pares OD selecionados via matriz OD). 
** [[VehicleEmitter]]: emite veículos pela rede de tráfego em intervalos de tempo constantes
* [[SUMO-mockup]]: simula a funcionalidade básica de um cliente TraCI e de classes de sumolib.net para testes de unidade.

== Mergulho Inicial / Roadmap ==

* ler o tutorial do sumo em https://sumo.dlr.de/docs/Tutorials.html
* realizar os seguintes passos do zero para se familiarizar com a parte de geração da rede viária e da demanda:
1. selecione um trecho qualquer de uma cidade qualquer que você conheça bem (por ex. parte do bairro onde você mora/morou)

2. crie a rede viária correspondente ou seja crie os cruzamentos (nós) e as vias (edges) ligando os nós; faça isto manualmente adotando um sistema de coordenada qualquer  que preserve apenas a distância (aproximada) entre os nodos

3. faça a mesma coisa ou seja a mesma área exportando um retângulo do open street map (osm.org); se familiarize com o uso do filtro que permite filtrar algumas vias segundo suas características, bem como desprezar a geometria que o OSM exporta mas que em geral mais atrapalha que ajuda

4. isto feito, gere demandas (ou seja as viagens ou seja os veículos) usando as varias formas de geração de demanda no SUMO: aleatória, via matriz origem-destino (OD), flow etc.

5. execute a simulação e se familiarize com a visualização

6. após, gere uma parte de uma linha de ônibus (algumas paradas)

7. execute a simulação e veja, além da visualização, os arquivos de log

8. inclua semáforos nos cruzamentos: esta parte não é trivial no SUMO e entender a documentação já é um desafio ! Peça ajuda ao pessoal do lab. 

9. se familiarize com o TraCI e tente mudar os planos semafóricos em tempo de simulação (o traci serve para se atuar na simulação durante a mesma)

10. se familiarize com o tracihub que permite que vários clientes atuem sobre a simulação

11. se familiarize com o sumoplot
